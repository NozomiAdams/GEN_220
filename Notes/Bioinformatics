
#Notes for class on 11/3/17
Introduction to BLAST
do sequence searchers DNA to DNA searches 
develop workflows to ask questions 
BLAST is core for bioinformatics
There are 2 files taken the predicted genes in the yeast genome and only grabbed genes from chromosome 1
how would you read in a script from a fasta sequence file. How would you write a script of the subset
look at orfs or DNA of protein coding regions
Blast was designed to do fast sequence searchers
NCBI is what is most familiar - supported by US national health 
LUU blast is one method to use and AB-Blast is another
2.7.1 was the version that was made last week
can use module system to load up a particular tool or version of a tool
module avail to know versions that are available on the biocluster 
index the database you have a query sequence and search it against one or many sequence databases
align sequence 1 to a whole bunch of databases
To build index you run tool called makeblastdb
once you made database you don't have to reindex it
because it is a nuceltoide database you tell it a nuc
you tell it the file you want to read in and the files have to be in the fasta format
the id is followed by a space everything before 1st space is the ID 
ncbi develop database files from their site and they have a prefix system
gi|rm|gb|accu|locus
nucelotide database and protein database
module load ncbi-blast/2.7.1+
makeblastdb
makeblastdb -in file -dbtype nucl
mkdir BLAST_demo
cd BLAST_demo
ls
ln -s /bigdata/gen220/shared/data_files/sequences/yeast_chr1_orfs.fa
ln -s /bigdata/gen220/shared/data_files/sequences/C_glabrata_orfs.fa
#search these two against eachtoher build an index database against these but search C. glabrata ones
do a blast search now just get one sequence out of the file now 
more C.glabrata
more yeast file 
head -n 15  yeast_chr1_orfs.fa > YAL027E.cds
blastn: take nucleotide sequence and search it against the database 
blastn -query YAL027W.cds -db C_glabrata_orfs.fa
use query file and database (db) option
out is where to save the report 
this particular sequence has no homologues
to run the whole database file (whole set of 
you don't really need to look at the alignment 
want to count how many hits there are: what is the best or multiple hits
can take a big text file and run a parser on it 
we might want to get it as a tab delimited format 
outfmt gives us format in tab delimited way 
two flavors: one starts with comments and another does not
use e-value format for scientific notation
number of identical bases and the length of the alignment are shown
total length of alignment includes the gaps that are included
if you wanted to know number of bases in query sequence aligned 
alignment starts at 196 and goes to 1786
to figure out how many bases from our query seuence alignned it would be (1786 - 196)4416 (total length of query sequence)
number of bases out of total bases aligned 
tab delimited report 
outfmt 6 to not get any of the comments 
for this report we have 18 alignments: count 18 lines in the report 
don't want to coutnt the same one twice 
use awk or cut
awk '{print $1}' yeast_chr1-vs-Cglabrata.BLASTN.nocomments.tab | uniq wc -l
awk '{print $1}' yeast_chr1-vs-Cglabrata.BLASTN.nocomments.tab | uniq | wc -l
6-frame translation 3-F and 3-R
translate both query and database into 6 frame RNA
max nubmer of target sequences: top 5 hits; don't need to see all thousand
can tell it to give back the max number of target sequences 
target seqeunce is name of sequence that is a hit 
the output is sorted by the e value if we have two pieces that align in the database
the better e-value comes first. The tool optimizes to give the best or most similar sequence
Need to look at the start and the end of the query 
BLAST: content of script to send 
header tells single computer with 4 cpu (will run 4X as fast) 
module load ncbi-blast/2.7.1+

Notes on 11/8/2017
Bioinformatics 2 - Short reads, alignment, stats, SNPs
Go over the homework 
Write a script protein_freq.py which will read in a protein Fasta format file Saccharomyces_cerevisiae.peps.fa
Print out the overall frequency (percentage) of each amino acid observed across all the sequences
Order this output sorted by the frequency of the amino acid, so the most frequent appear first.
Read in a file that was in fasta format and count every single amino acid 
data structure is a dictionary to look up a particular amino acid 
read in a sequence fasta file and get back an array of sequences
seqs = read.fasta(protein_file)
AAfreq = {}
totalaa = 0
#iterate on each sequence
for seq in seqs:
  #iterate on each base/amino acid in the sequence
  for aa in seq:
    totalaa += 1 #count the total number of aa seen
    if aa in AAfreq: #if this is not the 1st time we see this
      AAfreq[aa] += 1
    else: # if this is not 1st time seeing this aa, set the count to 1
      AAfreq[aa] += 1
      
for character in sequence string
have more than one sequence to process (adding a layer)
add every time we see any baes 
what is the % of methianines and cytosines in the data file
we need to check and see if we have already seen this amino acid beofore
dictionary we want to iterate through the 
is this particular character in this dictionary if it is then add one the value stored already 
if it is not then set the value to 1 because we haven't seen it before

Header = ["Amino Acid","Proteome Percentage"]
print("\t".join(Header))
#your code for the report
for aa in AAfreq
counting something up that is unique
have a dictionary that you add something to each time you see it 
protein_freq.py
{} initializes a dictionary  
use square brackets to tell it 
set the value m = 1
reverse is how to get data back out 
print("%s\t%.2f %%"%(aa,100 * AAfreq[aa]/ totalaa))
print("%s\t%d %%"%(aa,100 * AAfreq[aa]/ totalaa))

homework #2: look at the dinucleotide frequencies look at 2 bases at a time instead of a single one
use this to compare the tables for 2 files
read in the sequences file and get back an array of sequences
2 files that are genomes in fasta formats 
initialize 2 dictionaries to store data in it
read in sequence file and get back an array (2 sequence files)
and then loop through the sequences
sequence list from seq file 1 and iterate through all strings 
iterate through a set of numbers which tell you where you want to 
go up to the last base in the sequence and do up to -1
go through and read off AA, AC, TA, start at base 0 and go up to TA not 
you want the iterator to go from number 0 all the way up to 4 but not including 5 and the length will be 5
In the loop you can print out what is the sequence we got and what is the position in the string
add this code and run this 

homework problem #3
Take a report and write a filtering code to take the BLAST output based on what you want to look out
print out lines in report where the accessio nnumber of subject falls into some range
where percent identity is >=25% 
you have a report file and use the open statment to open the file up 
open the file and process each line in the file and get rid of the new line in the end
line.strip() take the data file and all data are tab dellimited use split commadn to get back an array
csv library in python 
split the line by tabs and then you get back a row that is an array and every item in the array
look at the files that are delimited by something. 
Tell that is is a tab delimited file and split it on the tabs
query, subject, and % identity column two genes from 2 diffeernt bacterial species 
e-value for alignment is 0: highly unlikely that alinnment is there by chance
we are trying to process this file: find rows in datafile where hits only come from a certain range of accesions
convert string into number and check to see if value is greater than a certain number
we say the subject accession number is a particular column in the datafile
print rows that print a particular accession number 
1 method is to split on a particular underscore
also get rid of the trailing dot  
regular expressions and run as a match and run YP_ and give it a string t
if it finds a match then we use the group option : the 1st set of parantehses gets stored in group 1
for the whole thing that matched that would be group 0
it prints out group 0 and group 1
python still thinks it a string but ints a number int allows us to treat it like a number
now that we have the number we can update the variable we have 
is the number bigger than the limit that we set here and is is less than this one
does it fall between this range of numbers 
we only print out accessions that fit into that strategy
we check and see if it falls between those values 
do we have something where the %identity is > 25 
you can convert it to an integer or covnert it to a float or else the 1e-10 doesn't work
we can check the numbers and add an additional column 
how long was the query alignment 
the very first base in the alignment is 0
blast tells us the alignment goes from 1-3 the length of taht alignment shoudl be 3
have to add 1 to that to get it to be equal to the alignment 
0-3 ATC have to add 1 if you want to figure out how long something is
to get the length you have to add 1 to it
subtract them from eachother and add 1
data in column delimited format and manipuate it and process it in some way and print out subsets of this data
m.group(0) is always the whole thing that matches what the pattern is
m.group(1) is only the things in the 1st parantheses that do match
matching forces us to start the match in the string and everything contained within match goes in group 0
group 1 and then group 2 matches the 1st number that came out of the accession this is 0 
this gives you the capture of the pattern
group(0) if match is subset of the larger string then group 0 will not contain it 
import re match = re.match("ABCD(EFG)")
if we print out group 0 it gives the whole thing that matches that 
match at least any of the numbers A-H and print that out 
/d matches any set of any number
just turns the string the accession number as a prefix trying to get rid of the bit 
ask the pattern things that has numbers 
matches YP_
you are storing the value and testing for math part we have to go and get important stuff in the accession number
take the string and recognize that part of the string has the nubmers you want to use
regular expressions (\d+) gives flexible
file handle (fh)
line is a string
call string functions on it with line.string and line.split manipulate the array
take a string turn it into array and do things with it. 

Align short-read data genomic sequencing or indel detection
pipelines: start build up pipelines for analysis
write code to restart something when it fails
have multiple steps to do something step 2 depends on step 1 and want to rerun something 
FastQ format starts with @
FASTA format starts with >
line describes the quality of every single thing in this sequence 
qaulity score is a representation between 0 and 40 if you wanted each single charcter to represent something
fastq format table that encodes the data 
the idea is that every letter encodes a number and is offset from some scoring system so h is going to be a quality score of 7
offset of some starting position. single base pair quality score represent the quality of the sequence
the sequence files have inherent infomration in them
information in big long header line represents where and position on the flow cell as to where rows and columsn and seq. are from
we have paired-end data that we have sequence that are inherently paired so they reprensent some physical peice of DNA and they are paired 
up if you have 2 seuqnece pairs (some distance apart) something is dfiferent in some expectation that they should be near eachother
if you have a sequence read with a forward and reverse read and figure out where they align in the genome
something extra in the DNA transposable element? we sequence some DNA and there are pairs of sequences that are attracted together
short read aligners: can't use BLAST to align short reads 
other tools that can do alignments much faster: burrows wheeler's transform
we use the aligners to jump into it 
run indexing step with bwa on the genome 
bwa index and the file you want to run it on
take reads that you develop and run an alignment of those 
the files are compressed and if you want to look at them you can use zmore
there is a sequence id and quality scores 
can give it files that are compressed or uncompressed
takes 100,000 sequence reads tries to guess the insert size baased on how far apart pairs are in the genome
tells you that there is some average distance 
does chunks of sequences at a time: tells you to run stuff with multiple processors 
redirect output to yeast.sam and if you open up the file gives info on header info all sequences on genome file
tells you the name of the sequence and how long it is 
gives info about the alignment the @ signs tells you what is in the data file
self documenting run bwa and tells you version of bwa and commands 
tells you information about which sequence was aligned
the same number is comeing up twice gave it a forward and reverse file 
data from forward and reverse read file and they come up as paired 
you see the starting position of each of them and tells you how far away the pair is 
tells you what the insert size is 
run a tool where we can call the SNPs out of the file
bam is like sam file but its a binary version and its smaller in size because its compressed
converted it to a sorted file and run a couple of steps to convert it to another format called cram
There is a position and chromosome number 20 and tells you the SNP in the population that is being compared
EMBL accession number and pulls up the record
can download the EMBL file (fastq) format 

Notes on 11/15/17
RNASeq analyses 
sequence the expressed transcripts from organism; could be biased on a particulary subset of reads
there could be an enrichment polyA tag just to get RNA out
turn RNA to cDNA with a short reads we get transcript pieces. 
How are genes expressed in different tissue types? 
figure out genes that have different expressions
have sequenced fragments to turn into gene expression fragments
don't have a genome: assemble best guess of transcriptome: align reads to eachtoher to build a transcriptome assembly
use assembled transcripts to annotate 
position along a gene and how deep the sequence reads are at in particular place in the genome
places with lots of reads means there are lots of tags that came from (expressed)
eukaryotic gene with introns it is not uniform and there is variablity with how cleavage occurs
this information is turned into gene expression 
we normalized this because every gene has some expression depth depends on how many are sequenced in total
if you sequence 5x as much; normalize by the number of reads 
compare experiments by number of reads
given a region of the genome, how many reads map there and then normalize that
Multiple approaches
You have a genome that is sequenced and you want to align RNAseq to genome
de novo assembly 
when you don't have genome you can make a transcriptome: assemble all reads into 1 best guess 
take one part of the insect and align them to assemble transcript and compare expression values from one sampel to another
align transcripts to genome or mRNA for comparitive expression or gene content
Mapping to the genome
align DNA reads to the genome 
aligning RNA to genome is difficult because of introns
ability to span the splice site is complicated 
you need to use a tool that is splice aware 
bwa and bowtie work with nonspliced areas of the genome
tophat uses bowtie under the hood
hisat will be used today in class
gnap and gmap are also splice aware tools
can get a best guess of splice sites without a reference genome
once you have generated this alignment with short reads to genome with knowledge of splice sites
how many reads overlap exons?
if you wanted to figure out gene expression differences
once you know where the reads align you make table how many reads overlap exons
a number that is the expression level of gene and normalize by how long the gene is
short reads have less sites that overlap than long genes
normalize the number of reads that align by the length of the gene
compare experiment 1 and 2 you have to normalize by total number of reads in the library
reads/Kilobase or FPKM other normalizations have been applied today we will use stringtie
you get a tab delimited table that we can parse that gives gene expression under different expression
statistically which genes have experiemental selection: variance between experiments 
Ballgown, DESeq, edgeR 
Alternative approach for quantifying 
aligning reads to genome is expensive for a big dataset 
if we realize that we don't care about reads that don't map to gene regions then we should align reads to transcripts
Kalisto and Sailfish allow to give database of transcripts (cDNA) and run it with RNAseq reads and gives back a table of expression
Denovo assembly: 
Trinity assembler 
want to assemble the transcriptome (use trinitiy) 
There are a couple of steps that take short reads and then generate a transcriptome assembly 
get back a sequence that are a bunch of transcripts
need a data file and sequence multiple body parts and get best guess of the organism
1 file for forward reads and 1 file for reverse reads and let them run 
figure out where protein coding regions are within the transcript
with any given transcript go to predicted proteins 
trininty step gives you an assembled set of transcripts 
each sequence is a guess of a transcript 
if you want the proteins: of all possible frames which one is the longest you get back a coding sequence
ability to assemble transcripts is not 100% 
you get 2 sequences that if you know the right answer came from the same gene 
not all exons are necessarily included within the transcripts the second exon is missing
trinity can assemble two transcripts that came from the gene
RNASeq read mapping
run a tool called HISAT2
and do alignments of reads to the genome




