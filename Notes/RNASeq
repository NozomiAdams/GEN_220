
Notes on 11/15/17
RNASeq analyses 
sequence the expressed transcripts from organism; could be biased on a particulary subset of reads
there could be an enrichment polyA tag just to get RNA out
turn RNA to cDNA with a short reads we get transcript pieces. 
How are genes expressed in different tissue types? 
figure out genes that have different expressions
have sequenced fragments to turn into gene expression fragments
don't have a genome: assemble best guess of transcriptome: align reads to eachtoher to build a transcriptome assembly
use assembled transcripts to annotate 
position along a gene and how deep the sequence reads are at in particular place in the genome
places with lots of reads means there are lots of tags that came from (expressed)
eukaryotic gene with introns it is not uniform and there is variablity with how cleavage occurs
this information is turned into gene expression 
we normalized this because every gene has some expression depth depends on how many are sequenced in total
if you sequence 5x as much; normalize by the number of reads 
compare experiments by number of reads
given a region of the genome, how many reads map there and then normalize that
Multiple approaches
You have a genome that is sequenced and you want to align RNAseq to genome
de novo assembly 
when you don't have genome you can make a transcriptome: assemble all reads into 1 best guess 
take one part of the insect and align them to assemble transcript and compare expression values from one sampel to another
align transcripts to genome or mRNA for comparitive expression or gene content
Mapping to the genome
align DNA reads to the genome 
aligning RNA to genome is difficult because of introns
ability to span the splice site is complicated 
you need to use a tool that is splice aware 
bwa and bowtie work with nonspliced areas of the genome
tophat uses bowtie under the hood
hisat will be used today in class
gnap and gmap are also splice aware tools
can get a best guess of splice sites without a reference genome
once you have generated this alignment with short reads to genome with knowledge of splice sites
how many reads overlap exons?
if you wanted to figure out gene expression differences
once you know where the reads align you make table how many reads overlap exons
a number that is the expression level of gene and normalize by how long the gene is
short reads have less sites that overlap than long genes
normalize the number of reads that align by the length of the gene
compare experiment 1 and 2 you have to normalize by total number of reads in the library
reads/Kilobase or FPKM other normalizations have been applied today we will use stringtie
you get a tab delimited table that we can parse that gives gene expression under different expression
statistically which genes have experiemental selection: variance between experiments 
Ballgown, DESeq, edgeR 
Alternative approach for quantifying 
aligning reads to genome is expensive for a big dataset 
if we realize that we don't care about reads that don't map to gene regions then we should align reads to transcripts
Kalisto and Sailfish allow to give database of transcripts (cDNA) and run it with RNAseq reads and gives back a table of expression
Denovo assembly: 
Trinity assembler 
want to assemble the transcriptome (use trinitiy) 
There are a couple of steps that take short reads and then generate a transcriptome assembly 
get back a sequence that are a bunch of transcripts
need a data file and sequence multiple body parts and get best guess of the organism
1 file for forward reads and 1 file for reverse reads and let them run 
figure out where protein coding regions are within the transcript
with any given transcript go to predicted proteins 
trininty step gives you an assembled set of transcripts 
each sequence is a guess of a transcript 
if you want the proteins: of all possible frames which one is the longest you get back a coding sequence
ability to assemble transcripts is not 100% 
you get 2 sequences that if you know the right answer came from the same gene 
not all exons are necessarily included within the transcripts the second exon is missing
trinity can assemble two transcripts that came from the gene
RNASeq read mapping
run a tool called HISAT2
and do alignments of reads to the genome


With a random subet we want to randomly sample a subset of it
write a quick parser to read the file in and just use one step
with 600,000 we will subsample it and assume that a random subsample of this (10,000) could be representative of the data
or we could do bootstrapping. write a bootstrap and take an alignment multiple alignment and every column is a particular character
want to take certain columns and make a new alignment
column wise random subsample we have a table and want to get a random set of lines from the table
SNP calling just randomly select some lines of the file to make a smaller version of the file

11/17/2017 
tools to build indexes and retrieving them 
cdbfasta module to run the protein database
the fastq format expects a sequence name and string and format 
To retrieve this information you use tool called cdbyank reads.fastq.cidx (index file) 
pass the information to standard in 
cat file of ids and that can get passed into cdbfasta 
index and you have a tool to retreive from index and tell it what things you want 
each line is the name of a sequence id that you want
look at the lines that start with > sign these are names of sequences
if you want to get 1 or 2 sequences out of database file
a file in it there are 2 lines: 2 names of sequences that are sequences in the file
cdbfasta on the tool 
cat seq_I_want.txt 
build a name and figure out what the sequence is for the particular name
tell it that the @ sign distinguishes between 
cdbfasta fasta format or fastq to retrieve sequences based on names 
run a blast search get back sequences that hit: multiple align them 
print out how long sequences are and distribution of sequence sizes
biopython tools to read in sequences 
#!/usr/bin/env python3
import sys
from Bio import SeqIO
from Bio.Seq import Seq
# seqfile
if len(sys.argv) != 2:
     print("argument should be\n","sequence_length.py FILE.fasta")
     exit()
filename = sys.argv[1]
print("%s\t%s"%("Name","Length")) #csv module to print out data 
for seq_record in SeqIO.parse( filename , "fasta"):  #this is biopython code this is an iterator SeqIO is name of the module
    print("%s\t%d"%(seq_record.id,len(seq_record)))  #call a for loop and get back a sequence record print out seq name and length
    
    Generate table of sequence sizes
    take an output and redirect to a file 
    annotations from C.elegans genome of all the transposon sequences from the genome
    then you uncompress files before processing and then
    save the output into 2 different files transposons.lengths and mRNA.lengths
    
    
    
    
